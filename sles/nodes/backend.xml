<stack:stack>
	
	<stack:description>
	Handle for Backend Appliance
	</stack:description>

	<stack:copyright>
	Copyright (c) 2006 - 2018 Teradata
	All rights reserved. Stacki(r) v5.x stacki.com
	https://github.com/Teradata/stacki/blob/master/LICENSE.txt
	</stack:copyright>

	<stack:package stack:cond="os.version == '12.x'">
		mlocate
		grub2
	</stack:package>

<stack:stacki>
authorized_key="""<stack:eval>cat /root/.ssh/id_rsa.pub</stack:eval>"""
host_key="""<stack:eval>/opt/stack/sbin/read-ssh-private-key ECDSA</stack:eval>"""
</stack:stacki>

<stack:script stack:stage="install-post" stack:chroot="false">
#!/bin/sh

mkdir -p /mnt/tmp/stack_site
cp /tmp/stack_site/__init__.py /mnt/tmp/stack_site/
</stack:script>

<stack:script stack:stage="install-post">

echo "&hostname;.&domainname;" > /etc/HOSTNAME

SERVER=&yumserver;
if [ x"" == x$SERVER ]
then
	SERVER=&Kickstart_PrivateKickstartHost;
fi

/usr/bin/curl --insecure -o /dev/null https://$SERVER/install/sbin/public/setPxeboot.cgi?params='\{"action":"os"\}'

/usr/bin/curl --insecure -o /dev/null https://$SERVER/install/sbin/public/setDbPartitions.cgi


<!-- repo config -->
rm -f /etc/zypp/repos.d/*
<stack:report stack:name="host.repo">&hostname;</stack:report>


<stack:script stack:stage="install-post" stack:cond="release == 'sles12'">
<stack:report stack:name="host.interface">&hostname;</stack:report>
<stack:report stack:name="host.route">&hostname;</stack:report>
<stack:report stack:name="host.resolv">&hostname;</stack:report>
</stack:script>

<stack:script stack:stage="boot-pre">

<!-- networking config -->
<stack:report stack:name="host.interface">&hostname;</stack:report>
<stack:report stack:name="host.route">&hostname;</stack:report>
<stack:report stack:name="host.resolv">&hostname;</stack:report>

#
# the above command (report host resolv) writes /etc/resolv.conf. make sure
# YaST doesn't overwrite it
#

awk '/NETCONFIG_DNS_POLICY/ { \
	printf("NETCONFIG_DNS_POLICY=\"\"\n"); \
	next; \
} \
{ print $0 }' /etc/sysconfig/network/config &gt; /tmp/config

cp /tmp/config /etc/sysconfig/network/config

<!-- propagate root's public ssh key -->
<stack:file stack:name="/root/.ssh/authorized_keys">
<stack:eval>
cat /root/.ssh/id_rsa.pub
</stack:eval>
</stack:file>

chmod a+rx /root
chmod a+rx /root/.ssh

<!-- ipmi config -->
/sbin/chkconfig ipmi on
service ipmi start
chmod +x /tmp/ipmisetup
/tmp/ipmisetup
rm -rf /tmp/ipmisetup
</stack:script>


</stack:stack> 

