---
  - name: Copy Stacki ISO to frontend
    copy:
      src: "{{ lookup('env','STACKI_ISO') }}"
      dest: /export/isos/
      mode: 0644

  - name: Ensures vagrant dir exists
    file:
      path: /vagrant
      state: directory

  - name: Fetch a random file to use during rndc-confgen
    get_url:
      url: https://raw.githubusercontent.com/Teradata/stacki/develop/logo.png
      dest: /vagrant/randomfile
      mode: 0644
    register: get_url_result
    until: get_url_result is succeeded
    retries: 6
    delay: 10
    when: lookup('env','GIT_BRANCH') is match("(feature|bugfix)/.*")

  - name: Setup /etc/host to a known good state
    copy:
      dest: /etc/hosts
      content: |
        127.0.0.1       localhost
        192.168.0.2     frontend-0-0  frontend-0-0
      mode: 0644

  - name: Setup /etc/resolv.conf to known good state
    copy:
      src: /etc/resolv.conf
      dest: /etc/resolv.conf
      mode: 0644

  - name: "Report frontend-install.py URL"
    debug:
      msg: "https://raw.githubusercontent.com/Teradata/stacki/{{ lookup('env','GIT_BRANCH')|default('develop', True) }}/tools/fab/frontend-install.py"

  - name: Download frontend-install.py
    get_url:
      url: "https://raw.githubusercontent.com/Teradata/stacki/{{ lookup('env','GIT_BRANCH')|default('develop', True) }}/tools/fab/frontend-install.py"
      dest: /root/
      mode: 0744
    register: get_url_result
    until: get_url_result is succeeded
    retries: 6
    delay: 10

  - name: "Report frontend-install.sh URL"
    debug:
      msg: "https://raw.githubusercontent.com/Teradata/stacki/{{ lookup('env','GIT_BRANCH')|default('develop', True) }}/tools/fab/frontend-install.sh"

  - name: Download frontend-install.sh
    get_url:
      url: "https://raw.githubusercontent.com/Teradata/stacki/{{ lookup('env','GIT_BRANCH')|default('develop', True) }}/tools/fab/frontend-install.sh"
      dest: /root/
      mode: 0744
    register: get_url_result
    until: get_url_result is succeeded
    retries: 6
    delay: 10

  - name: Barnacle the frontend
    shell: /root/frontend-install.sh --use-existing --stacki-iso=/export/isos/{{ lookup('env','STACKI_ISO')|basename }} <<< "2"
    register: barnacle_output

  - name: Barnacle Output
    echo:
      output: "{{ barnacle_output.stdout }}"
